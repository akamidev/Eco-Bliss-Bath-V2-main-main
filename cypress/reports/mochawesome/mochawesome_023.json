{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-22T19:39:27.567Z",
    "end": "2025-07-22T19:39:28.784Z",
    "duration": 1217,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7e4844d3-71fb-460f-b2e4-10952ef8f24c",
      "title": "",
      "fullFile": "cypress\\e2e\\apiGetInformation.cy.js",
      "file": "cypress\\e2e\\apiGetInformation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b89d63bf-23ca-4ab4-957e-d0ced394947b",
          "title": "POST /login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "devrait obtenir les informations de l'utilisateur",
              "fullTitle": "POST /login devrait obtenir les informations de l'utilisateur",
              "timedOut": null,
              "duration": 1151,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: apiUrl + \"/me\",\n  headers: {\n    Authorization: \"Bearer \" + token,\n    // Ajoute le token dans l'en-tête Authorization.\n    Accept: \"application/json\" // Précise le format de réponse attendu.\n  },\n  failOnStatusCode: true // Le test échoue si le serveur retourne une erreur HTTP.\n}).then(response => {\n  // Vérifie que la requête est réussie.\n  expect(response.status).to.eq(200);\n  // Vérifie que la réponse est un objet.\n  expect(response.body).to.be.an(\"object\");\n  // Vérifie que l'objet contient les clés attendues.\n  expect(response.body).to.include.keys(\"id\", \"email\", \"roles\", \"password\", \"firstname\", \"lastname\");\n  // Vérifie le type de chaque propriété.\n  expect(response.body.id).to.be.a(\"number\");\n  expect(response.body.email).to.be.a(\"string\");\n  expect(response.body.password).to.be.a(\"string\");\n  expect(response.body.firstname).to.be.a(\"string\");\n  expect(response.body.lastname).to.be.a(\"string\");\n  expect(response.body.roles).to.be.an(\"array\");\n});",
              "err": {},
              "uuid": "e643f10c-1c41-4944-b51d-b57f55655aac",
              "parentUUID": "b89d63bf-23ca-4ab4-957e-d0ced394947b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e643f10c-1c41-4944-b51d-b57f55655aac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}